<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ranorex_playground</name>
    </assembly>
    <members>
        <member name="T:project_2.codemodules.Delay_10_seconds">
            <summary>
            Description of Delay_.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Delay_10_seconds.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Delay_10_seconds.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.codemodules.Mailslurper_server">
            <summary>
            Description of Mailslurper_server.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Mailslurper_server.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Mailslurper_server.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Mailslurper handler
            </summary>
            <remarks>Beschreibung ..... You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.copy_ranorex_to_vm.copy">
             <summary>
            The copy recording.
             </summary>
        </member>
        <member name="F:project_2.copy_ranorex_to_vm.copy.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.copy.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.copy.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.copy_ranorex_to_vm.copy.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.copy.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.copy.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.copy_ranorex_to_vm.copy.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.copy_ranorex_to_vm.run_Ie">
             <summary>
            The run_Ie recording.
             </summary>
        </member>
        <member name="F:project_2.copy_ranorex_to_vm.run_Ie.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_Ie.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_Ie.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.copy_ranorex_to_vm.run_Ie.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_Ie.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_Ie.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.copy_ranorex_to_vm.run_Ie.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.copy_ranorex_to_vm.run_remote">
             <summary>
            The run_remote recording.
             </summary>
        </member>
        <member name="F:project_2.copy_ranorex_to_vm.run_remote.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_remote.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_remote.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.copy_ranorex_to_vm.run_remote.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_remote.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.copy_ranorex_to_vm.run_remote.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.copy_ranorex_to_vm.run_remote.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.lab.CimV2">
             <summary>
            The CimV2 recording.
             </summary>
        </member>
        <member name="F:project_2.lab.CimV2.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.lab.CimV2.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.lab.CimV2.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.lab.CimV2.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.lab.CimV2.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.lab.CimV2.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.lab.CimV2.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.lab.ini_read_write">
             <summary>
            The ini_read_write recording.
             </summary>
        </member>
        <member name="F:project_2.lab.ini_read_write.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.lab.ini_read_write.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.lab.ini_read_write.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.lab.ini_read_write.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.lab.ini_read_write.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.lab.ini_read_write.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.lab.ini_read_write.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:project_2.lab.ini_read_write.ini_file">
            <summary>
            Gets or sets the value of variable ini_file.
            </summary>
        </member>
        <member name="P:project_2.lab.ini_read_write.section">
            <summary>
            Gets or sets the value of variable section.
            </summary>
        </member>
        <member name="P:project_2.lab.ini_read_write.key">
            <summary>
            Gets or sets the value of variable key.
            </summary>
        </member>
        <member name="T:project_2.codemodules.Powershell_handler">
            <summary>
            Description of Powershell_handler.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Powershell_handler.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.codemodules.Powershell_handler.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.lab.psexec_handler">
             <summary>
            The psexec_handler recording.
             </summary>
        </member>
        <member name="F:project_2.lab.psexec_handler.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.lab.psexec_handler.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.lab.psexec_handler.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.lab.psexec_handler.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.lab.psexec_handler.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.lab.psexec_handler.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.lab.psexec_handler.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.lab.smtp">
             <summary>
            The smtp recording.
             </summary>
        </member>
        <member name="F:project_2.lab.smtp.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.lab.smtp.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.lab.smtp.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.lab.smtp.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.lab.smtp.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.lab.smtp.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.lab.smtp.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.mailcare.delete_email">
            <summary>
            Description of delete_email.
            </summary>
        </member>
        <member name="M:project_2.mailcare.delete_email.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.mailcare.delete_email.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.mailcare.Mailcare">
            <summary>
            Description of Mailcare.
            </summary>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member 'M:project_2.mailcare.Mailcare.wait_for_mail_with_api_paraemter_and_get_data(System.String)' ignoriert -->
        <member name="M:project_2.mailcare.Mailcare.verify_no_email_was_sent(System.String,System.Int32)">
            <summary>
             mailcare.Mailcare.verify_no_email_was_sent(@"vdogrr2@mailix.xyz", 30);
            </summary>
            <param name="api_parameter_inbox"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:project_2.mailcare.Mailcare.delete_email">
            <summary>
            mailcare.Mailcare.delete_email();
            </summary>
        </member>
        <member name="T:project_2.mailcare.Mailcare2">
            <summary>
            Description of Mailcare2.
            </summary>
        </member>
        <member name="M:project_2.mailcare.Mailcare2.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.mailcare.Mailcare2.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.mailcare.validate_email_arrived">
            <summary>
            Description of validate_email_arrived.
            </summary>
        </member>
        <member name="M:project_2.mailcare.validate_email_arrived.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.mailcare.validate_email_arrived.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.mailcare.validate_no_email_was_send">
            <summary>
            Description of validate_no_email_was_send.
            </summary>
        </member>
        <member name="M:project_2.mailcare.validate_no_email_was_send.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.mailcare.validate_no_email_was_send.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:project_2.mailsac.get_mailsac_mail">
             <summary>
            The get_mailsac_mail recording.
             </summary>
        </member>
        <member name="F:project_2.mailsac.get_mailsac_mail.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.mailsac.get_mailsac_mail.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.mailsac.get_mailsac_mail.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.mailsac.get_mailsac_mail.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.mailsac.get_mailsac_mail.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.mailsac.get_mailsac_mail.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.mailsac.get_mailsac_mail.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:project_2.Repository">
            <summary>
            The class representing the Repository element repository.
            </summary>
        </member>
        <member name="M:project_2.Repository.#ctor">
            <summary>
            Repository class constructor.
            </summary>
        </member>
        <member name="P:project_2.Repository.Instance">
            <summary>
            Gets the singleton class instance representing the Repository element repository.
            </summary>
        </member>
        <member name="P:project_2.Repository.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:project_2.Repository.CUserClient">
            <summary>
            The CUserClient folder.
            </summary>
        </member>
        <member name="P:project_2.Repository.Ie">
            <summary>
            The Ie folder.
            </summary>
        </member>
        <member name="T:project_2.RepositoryFolders">
            <summary>
            Inner folder classes.
            </summary>
        </member>
        <member name="T:project_2.RepositoryFolders.CUserClientAppFolder">
            <summary>
            The CUserClientAppFolder folder.
            </summary>
        </member>
        <member name="M:project_2.RepositoryFolders.CUserClientAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new CUserClient  folder.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.Gleich">
            <summary>
            The Gleich item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.GleichInfo">
            <summary>
            The Gleich item info.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.Jobs">
            <summary>
            The Jobs item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.JobsInfo">
            <summary>
            The Jobs item info.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.JobStarten">
            <summary>
            The JobStarten item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.JobStartenInfo">
            <summary>
            The JobStarten item info.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.JobStoppen">
            <summary>
            The JobStoppen item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.CUserClientAppFolder.JobStoppenInfo">
            <summary>
            The JobStoppen item info.
            </summary>
        </member>
        <member name="T:project_2.RepositoryFolders.IeAppFolder">
            <summary>
            The IeAppFolder folder.
            </summary>
        </member>
        <member name="M:project_2.RepositoryFolders.IeAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Ie  folder.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.IeAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:project_2.RepositoryFolders.IeAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="T:project_2.lab.wait_for_process_and_get_cmd">
             <summary>
            The wait_for_process_and_get_cmd recording.
             </summary>
        </member>
        <member name="F:project_2.lab.wait_for_process_and_get_cmd.repo">
            <summary>
            Holds an instance of the global::project_2.Repository repository.
            </summary>
        </member>
        <member name="M:project_2.lab.wait_for_process_and_get_cmd.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:project_2.lab.wait_for_process_and_get_cmd.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:project_2.lab.wait_for_process_and_get_cmd.Instance"/>.
            </summary>
        </member>
        <member name="M:project_2.lab.wait_for_process_and_get_cmd.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:project_2.lab.wait_for_process_and_get_cmd.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="P:project_2.lab.wait_for_process_and_get_cmd.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="T:__RxMain.__RxProgram">
            <summary>
            Modified Program class that ensures that the Ranorex System gets initialized and cleaned up
            correctly. This file is auto-generated during project build. This class will invoke the
            original 'Main' method implementation as needed.
            </summary>
        </member>
        <member name="M:__RxMain.__RxProgram.Main(System.String[])">
            <summary>
            The entry point of the application.
            </summary>
            <param name="args">Contains any number of command line arguments.</param>
            <returns>The return value of the projects original 'Main' implementation.</returns>
        </member>
    </members>
</doc>
